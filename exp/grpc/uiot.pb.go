// Code generated by protoc-gen-go. DO NOT EDIT.
// source: uiot.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ID contains all of the communication-relevant information about a device
// Contains a device's IP address, port, and unique ID number.
type ID struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_761f8d2c87cd1351, []int{0}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ID) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ID) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// ParamDef messages represent valid parameters for a given function.
// Contains mininum and maximum values the parameter can take.
type ParamDef struct {
	Min                  uint32   `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  uint32   `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamDef) Reset()         { *m = ParamDef{} }
func (m *ParamDef) String() string { return proto.CompactTextString(m) }
func (*ParamDef) ProtoMessage()    {}
func (*ParamDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_761f8d2c87cd1351, []int{1}
}

func (m *ParamDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamDef.Unmarshal(m, b)
}
func (m *ParamDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamDef.Marshal(b, m, deterministic)
}
func (m *ParamDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamDef.Merge(m, src)
}
func (m *ParamDef) XXX_Size() int {
	return xxx_messageInfo_ParamDef.Size(m)
}
func (m *ParamDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamDef.DiscardUnknown(m)
}

var xxx_messageInfo_ParamDef proto.InternalMessageInfo

func (m *ParamDef) GetMin() uint32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *ParamDef) GetMax() uint32 {
	if m != nil {
		return m.Max
	}
	return 0
}

// FuncDef messages represent individual functions a device can perform.
// Contains an ID, human-readable name, and list of parameters.
type FuncDef struct {
	Id                   uint32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Params               []*ParamDef `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FuncDef) Reset()         { *m = FuncDef{} }
func (m *FuncDef) String() string { return proto.CompactTextString(m) }
func (*FuncDef) ProtoMessage()    {}
func (*FuncDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_761f8d2c87cd1351, []int{2}
}

func (m *FuncDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuncDef.Unmarshal(m, b)
}
func (m *FuncDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuncDef.Marshal(b, m, deterministic)
}
func (m *FuncDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuncDef.Merge(m, src)
}
func (m *FuncDef) XXX_Size() int {
	return xxx_messageInfo_FuncDef.Size(m)
}
func (m *FuncDef) XXX_DiscardUnknown() {
	xxx_messageInfo_FuncDef.DiscardUnknown(m)
}

var xxx_messageInfo_FuncDef proto.InternalMessageInfo

func (m *FuncDef) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FuncDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FuncDef) GetParams() []*ParamDef {
	if m != nil {
		return m.Params
	}
	return nil
}

// DevInfo message are sent when a new device is connecting to the network.
// Contains a device's identifying information and all of the functions it performs.
type DevInfo struct {
	Id                   *ID        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Funcs                []*FuncDef `protobuf:"bytes,3,rep,name=funcs,proto3" json:"funcs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DevInfo) Reset()         { *m = DevInfo{} }
func (m *DevInfo) String() string { return proto.CompactTextString(m) }
func (*DevInfo) ProtoMessage()    {}
func (*DevInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_761f8d2c87cd1351, []int{3}
}

func (m *DevInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevInfo.Unmarshal(m, b)
}
func (m *DevInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevInfo.Marshal(b, m, deterministic)
}
func (m *DevInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevInfo.Merge(m, src)
}
func (m *DevInfo) XXX_Size() int {
	return xxx_messageInfo_DevInfo.Size(m)
}
func (m *DevInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DevInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DevInfo proto.InternalMessageInfo

func (m *DevInfo) GetId() *ID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DevInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DevInfo) GetFuncs() []*FuncDef {
	if m != nil {
		return m.Funcs
	}
	return nil
}

func init() {
	proto.RegisterType((*ID)(nil), "ID")
	proto.RegisterType((*ParamDef)(nil), "ParamDef")
	proto.RegisterType((*FuncDef)(nil), "FuncDef")
	proto.RegisterType((*DevInfo)(nil), "DevInfo")
}

func init() { proto.RegisterFile("uiot.proto", fileDescriptor_761f8d2c87cd1351) }

var fileDescriptor_761f8d2c87cd1351 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x6d, 0xab, 0xfd, 0x33, 0x8b, 0x22, 0xe3, 0xa5, 0x78, 0x90, 0x35, 0xa7, 0x82, 0x90,
	0x43, 0x7d, 0x83, 0x25, 0x08, 0xbd, 0x2d, 0x79, 0x83, 0xd8, 0xa6, 0x90, 0x43, 0x93, 0x90, 0xa6,
	0x8b, 0x8f, 0x2f, 0x89, 0xe9, 0x9e, 0xdc, 0xdb, 0x2f, 0x5f, 0x86, 0xdf, 0x37, 0x0c, 0xc0, 0xa6,
	0x8c, 0xa7, 0xd6, 0x19, 0x6f, 0xc8, 0x09, 0xf2, 0x81, 0xe1, 0x13, 0xe4, 0x6a, 0x6a, 0xb3, 0x63,
	0xd6, 0x3d, 0xf2, 0x5c, 0x4d, 0x88, 0x70, 0x6f, 0x8d, 0xf3, 0x6d, 0x1e, 0x93, 0xc8, 0xd8, 0x42,
	0x25, 0xa6, 0xc9, 0xc9, 0x75, 0x6d, 0x8b, 0x63, 0xd6, 0x35, 0x7c, 0x7f, 0x12, 0x0a, 0xf5, 0x59,
	0x38, 0xb1, 0x30, 0x39, 0xe3, 0x33, 0x14, 0x8b, 0xd2, 0x49, 0x15, 0x30, 0x26, 0xe2, 0x27, 0xa9,
	0x02, 0x92, 0x33, 0x54, 0x5f, 0x9b, 0x1e, 0xc3, 0xf8, 0x3f, 0xc5, 0x5a, 0x2c, 0x32, 0x4e, 0x37,
	0x3c, 0x32, 0xbe, 0x43, 0x69, 0x83, 0x3e, 0xf4, 0x16, 0xdd, 0xa1, 0x6f, 0xe8, 0xde, 0xc6, 0xd3,
	0x07, 0xe1, 0x50, 0x31, 0x79, 0x19, 0xf4, 0x6c, 0xf0, 0xe5, 0x6a, 0x3c, 0xf4, 0x05, 0x1d, 0xd8,
	0x4d, 0xed, 0x1b, 0x3c, 0xcc, 0x9b, 0x1e, 0x77, 0x6b, 0x4d, 0xd3, 0x4e, 0xfc, 0x2f, 0xee, 0x3f,
	0xa0, 0x64, 0xf2, 0xa2, 0xc6, 0xb0, 0x40, 0x73, 0x32, 0xc6, 0xaf, 0xde, 0x09, 0x8b, 0x35, 0x4d,
	0x4d, 0xaf, 0x57, 0x22, 0x77, 0xdf, 0x65, 0xbc, 0xe6, 0xe7, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x3c, 0x15, 0xf5, 0xc7, 0x5b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeviceClient is the client API for Device service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceClient interface {
	// Send our information to a remote device, and get theirs in return
	Bootstrap(ctx context.Context, in *DevInfo, opts ...grpc.CallOption) (*DevInfo, error)
}

type deviceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeviceClient(cc grpc.ClientConnInterface) DeviceClient {
	return &deviceClient{cc}
}

func (c *deviceClient) Bootstrap(ctx context.Context, in *DevInfo, opts ...grpc.CallOption) (*DevInfo, error) {
	out := new(DevInfo)
	err := c.cc.Invoke(ctx, "/Device/Bootstrap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServer is the server API for Device service.
type DeviceServer interface {
	// Send our information to a remote device, and get theirs in return
	Bootstrap(context.Context, *DevInfo) (*DevInfo, error)
}

// UnimplementedDeviceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServer struct {
}

func (*UnimplementedDeviceServer) Bootstrap(ctx context.Context, req *DevInfo) (*DevInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bootstrap not implemented")
}

func RegisterDeviceServer(s *grpc.Server, srv DeviceServer) {
	s.RegisterService(&_Device_serviceDesc, srv)
}

func _Device_Bootstrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DevInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Bootstrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Device/Bootstrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Bootstrap(ctx, req.(*DevInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Device_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Device",
	HandlerType: (*DeviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Bootstrap",
			Handler:    _Device_Bootstrap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uiot.proto",
}

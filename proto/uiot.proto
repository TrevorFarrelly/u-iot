syntax = "proto3";

// Device communication protocol
service Device {
    // Send our information to a remote device, and get theirs in return
    rpc Bootstrap(DevInfo) returns (DevInfo) {}
    // call a function on a remote device
    rpc CallFunc(FuncCall) returns (FuncRet) {}
    // request status from a remote device
    rpc NotifyStatus(Status) returns (Nothing) {}
    // tell a remote device that we are quitting, and to remove us from their network
    rpc Quit(DevInfo) returns (Nothing) {}
}

// Meta contains human-readable information about a device. Name, type of device,
// and room it is located in
message Meta {
    uint32 type = 1;
    uint32 room = 2;
    string name = 3;
}

// Param messages represent valid parameters for a given function.
// Contains mininum and maximum values the parameter can take.
message Param {
    uint32 min = 1;
    uint32 max = 2;
}

// Func messages represent individual functions a device can perform.
// Contains an ID, human-readable name, and list of parameters.
message Func {
  string name = 1;
  repeated Param params = 2;
}

// DevInfo message are sent when a new device is connecting to the network.
// Contains a device's identifying information and all of the functions it performs.
message DevInfo {
  uint32 port = 1;
  string addr = 2;
  Meta meta = 3;
  repeated Func funcs = 4;
}

// FuncCall is used when calling functions on a remote device. Provides the name
// and parameter values, set by the caller.
message FuncCall {
  string name = 1;
  repeated uint32 params = 2;
}

// StatusEntry contains one component reporting a device's state
// Preview for what multi-type support may look like in the future
message StatusVar {
  string name = 1;
  string type = 2;
  bytes value = 3;
}

// Statuses are used to report arbitrary information about remote device states.
message Status {
  repeated StatusVar entries = 1;
}

// FuncRet represents function return values. Empty for now, allowing the ability
// to expand in the future
message FuncRet {

}

// Nothing represents nothing
message Nothing {

}
